const Utils = require('../utils');

describe('Settings Screen Tests', () => {
  before(async () => {
    await Utils.reloadApp();
    await Utils.loginAsUser();
  });
  after(async () => {
    await Utils.logout();
  });

  beforeEach(async () => {
    await Utils.reloadApp();
    await navigateToSettingsScreen();
  });

  const navigateToSettingsScreen = async () => {
    await Utils.waitForSplashScreen();
    await Utils.tapFirstElementByLabel('Menu Button');
    await Utils.tapFirstElementByLabel('Settings');
  };

  it('should display a success message on settings update success', async () => {
    await element(by.id('emailInput')).replaceText('user@localhost.com');
    await element(by.id('settingsSubmitButton')).tap();
    const expectedLabel = 'Settings updated';
    await Utils.waitForElementToBeVisibleByLabel(expectedLabel);
    await expect(element(by.label(expectedLabel))).toBeVisible();
  });

  it('should display an error message on settings update failure', async () => {
    await element(by.id('emailInput')).replaceText('invalid-email');
    await element(by.id('settingsSubmitButton')).tap();
    const expectedLabel = 'Email must be a valid email';
    await Utils.waitForElementToBeVisibleByLabel(expectedLabel);
    await expect(element(by.label(expectedLabel))).toBeVisible();
  });
});
