const Utils = require('../utils');

describe('Change Password Screen Tests', () => {
  const username = process.env.E2E_USERNAME || 'user';
  const password = process.env.E2E_PASSWORD || 'user';
  const newPassword = process.env.E2E_NEW_PASSWORD || 'new-password';

  before(async () => {
    await Utils.reloadApp();
    await Utils.loginAsUser();
  });
  after(async () => {
    await Utils.logout();
  });

  beforeEach(async () => {
    await Utils.reloadApp();
    await navigateToChangePasswordScreen();
  });

  const navigateToChangePasswordScreen = async () => {
    await Utils.waitForSplashScreen();
    await Utils.tapFirstElementByLabel('Menu Button');
    await Utils.tapFirstElementByLabel('Change Password');
  };

  const changePassword = async (oldPassword, newPassword) => {
    await element(by.id('currentPasswordInput')).replaceText(oldPassword);
    await element(by.id('newPasswordInput')).replaceText(newPassword);
    await element(by.id('confirmPasswordInput')).replaceText(newPassword);
    await Utils.closeKeyboard('changePasswordScreen');
    await element(by.id('changePasswordSubmitButton')).tap();
  };

  it('should display a popup on change password success', async () => {
    await changePassword(password, newPassword);
    await expect(element(by.label('Password changed'))).toBeVisible();
    await changePassword(newPassword, password);
    await expect(element(by.label('Password changed'))).toBeVisible();
  });

  it('should display a popup on change password failure', async () => {
    await changePassword('invalid-password', 'invalid-password');
    await expect(element(by.label('Incorrect password'))).toBeVisible();
  });
});
