const DetoxExpoHelpers = require('detox-expo-helpers');
const { closeSoftKeyboard } = require('detox/src/android/espressoapi/ViewActions');

const username = process.env.E2E_USERNAME || 'user';
const password = process.env.E2E_PASSWORD || 'user';

const navigateToLoginScreen = async () => {
  await waitForSplashScreen();
  await tapFirstElementByLabel('Menu Button');
  await tapFirstElementByLabel('Login');
  await expect(element(by.id('loginScreenUsername'))).toBeVisible();
};

const loginAsUser = async () => {
  await navigateToLoginScreen();
  await element(by.id('loginScreenUsername')).replaceText(username);
  await element(by.id('loginScreenPassword')).replaceText(password);
  await element(by.id('loginScreenLoginButton')).tap();
  try {
    await Utils.waitForSplashScreen();;
  } catch (e) {
    throw new Error('Logging in failed. Check backend status or credentials.');
  }
};

const logout = async () => {
  await Utils.tapFirstElementByLabel('Menu Button');
  await Utils.tapFirstElementByLabel('Logout');
};

const goBack = async () => {
  if (device.getPlatform() === 'ios') {
    await element(by.id('header-back')).tap();
  } else {
    await device.pressBack();
  }
};

const closeKeyboard = async (componentId = null) => {
  try {
    if (device.getPlatform() === 'ios') {
      await element(by.id(componentId)).tap();
    } else {
      await closeSoftKeyboard();
    }
  } catch (e) {
    console.warn(e);
  }
};

const scrollTo = async (fieldId, listId) => {
  await waitFor(element(by.id(fieldId)))
    .toBeVisible()
    .whileElement(by.id(listId))
    .scroll(150, 'down', 0.01, 0.01);
};

const tapFirstElementByLabel = async (elementId) => {
  await element(by.label(elementId)).atIndex(0).tap();
};

const waitForSplashScreen = async () => {
  await waitFor(element(by.id('launchScreen'))).toBeVisible().withTimeout(3000);
};

const reloadApp = async () => {
  await DetoxExpoHelpers.reloadApp();
  // if you eject from expo, you should replace the line above with:
  // device.reloadReactNative()
};

module.exports = {
  navigateToLoginScreen,
  loginAsUser,
  goBack,
  logout,
  scrollTo,
  tapFirstElementByLabel,
  waitForSplashScreen,
  closeKeyboard,
  reloadApp,
};
